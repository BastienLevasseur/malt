<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" timestamp="2014-01-07T17:00:30" xmlns:UML="http://schema.omg.org/spec/UML/1.3">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.5.8</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML"/>
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isAbstract="false" isLeaf="false" xmi.id="m1" isRoot="false" name="ModÃ¨le UML">
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="folder" name="folder"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="datatype" name="datatype"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="constructor" name="constructor"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="friend" name="friend"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="virtual" name="virtual"/>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Logical View" name="Logical View">
     <UML:Namespace.ownedElement>
      <UML:Package stereotype="folder" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Datatypes" name="Datatypes">
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FcZLjSbHlIhH" name="int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="kyaI3NN3sLZ4" name="char"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FTrTnwgNWz4w" name="bool"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="aMgs1vnjtO1w" name="float"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="jMxbhWevxTMi" name="double"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="O25sz9oZTSPS" name="short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="NCBGYAAIW5rC" name="long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZT7WxRELRHDQ" name="unsigned int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="PzzqSMJnWS25" name="unsigned short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="dCL9GCJpgOKb" name="unsigned long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pWuGo5gB4d1U" name="string"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="UlIXMSsTi2nY" name="CallStackInfo"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="g9qHxMBD8GsJ" name="AllocStatProfiler"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JTJlRZ1tIHQe" name="AllocWrapper"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="8SItyz0oGxBQ" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="BHe1ZvSsfrPe" type="JTJlRZ1tIHQe" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="kiwAKgQQ8hJ7" type="g9qHxMBD8GsJ" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="gKtuH2IQKxPt" name="FunNameDic"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qsjVj8ASo6a9" name="SimpleCallStack"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="kzZsgrxM9rEO" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="tXnDSC4I2nmk" type="qsjVj8ASo6a9" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="uuCiympilNaR" type="UlIXMSsTi2nY" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EWlLN0hEVUQx" name="SimpleStackTracer"/>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="fUDhGzRAtdqr" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="OgX936ZFcKYx" type="g9qHxMBD8GsJ" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="IFBnkbiP4w4K" type="EWlLN0hEVUQx" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="tUUl5KcTy8bz" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="EAEqUknn0wYk" type="EWlLN0hEVUQx" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="YH7aD9u4dMph" type="qsjVj8ASo6a9" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
      <UML:Association visibility="public" isSpecification="false" namespace="Logical View" xmi.id="gQAdYlcmvpcO" name="">
       <UML:Association.connection>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="ZN9ZJhHpyMP9" type="EWlLN0hEVUQx" name="" aggregation="composite"/>
        <UML:AssociationEnd changeability="changeable" visibility="public" isNavigable="true" isSpecification="false" xmi.id="UJE5f1mKRvvz" type="gKtuH2IQKxPt" name="" aggregation="none"/>
       </UML:Association.connection>
      </UML:Association>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams>
       <diagram showopsig="1" linecolor="#ff0000" snapx="10" showattribassocs="1" snapy="10" linewidth="0" showattsig="1" isopen="1" showpackage="1" showpubliconly="1" showstereotype="1" name="Diagramme de classes" font="DejaVu Sans,10,-1,5,50,0,0,0,0,0" canvasheight="990" canvaswidth="1224" localid="-1" snapcsgrid="0" showgrid="0" showops="1" griddotcolor="#000000" backgroundcolor="#ffffff" usefillcolor="1" fillcolor="#ffff00" zoom="100" xmi.id="7p50U0YCwupD" documentation="" showscope="1" snapgrid="0" showatts="1" type="1">
        <widgets>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="1" showpackage="1" x="129" showattsigs="601" showstereotype="1" y="119" showattributes="1" font="DejaVu Sans,10,-1,5,75,0,0,0,0,0" width="106" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="UlIXMSsTi2nY" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="1" showpackage="1" x="242" showattsigs="601" showstereotype="1" y="502" showattributes="1" font="DejaVu Sans,10,-1,5,75,0,0,0,0,0" width="128" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="g9qHxMBD8GsJ" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="1" showpackage="1" x="251" showattsigs="601" showstereotype="1" y="620" showattributes="1" font="DejaVu Sans,10,-1,5,75,0,0,0,0,0" width="109" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="JTJlRZ1tIHQe" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="1" showpackage="1" x="352" showattsigs="601" showstereotype="1" y="300" showattributes="1" font="DejaVu Sans,10,-1,5,75,0,0,0,0,0" width="102" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="gKtuH2IQKxPt" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="1" showpackage="1" x="125" showattsigs="601" showstereotype="1" y="300" showattributes="1" font="DejaVu Sans,10,-1,5,75,0,0,0,0,0" width="128" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="qsjVj8ASo6a9" showscope="1" height="29" showopsigs="601"/>
         <classwidget linecolor="none" usesdiagramfillcolor="1" linewidth="none" showoperations="1" usesdiagramusefillcolor="1" showpubliconly="1" showpackage="1" x="232" showattsigs="601" showstereotype="1" y="413" showattributes="1" font="DejaVu Sans,10,-1,5,75,0,0,0,0,0" width="146" isinstance="0" usefillcolor="1" fillcolor="none" xmi.id="EWlLN0hEVUQx" showscope="1" height="29" showopsigs="601"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="JTJlRZ1tIHQe" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="8SItyz0oGxBQ" widgetbid="g9qHxMBD8GsJ" totalcountb="2" type="510" usefillcolor="0" linewidth="none">
          <linepath>
           <startpoint startx="306" starty="620"/>
           <endpoint endx="306" endy="531"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="qsjVj8ASo6a9" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="kzZsgrxM9rEO" widgetbid="UlIXMSsTi2nY" totalcountb="2" type="510" usefillcolor="0" linewidth="none">
          <linepath>
           <startpoint startx="192" starty="300"/>
           <endpoint endx="192" endy="148"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="g9qHxMBD8GsJ" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="2" xmi.id="fUDhGzRAtdqr" widgetbid="EWlLN0hEVUQx" totalcountb="2" type="510" usefillcolor="212" linewidth="none">
          <linepath>
           <startpoint startx="306" starty="502"/>
           <endpoint endx="306" endy="442"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="1" indexb="1" usesdiagramusefillcolor="0" widgetaid="EWlLN0hEVUQx" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="tUUl5KcTy8bz" widgetbid="qsjVj8ASo6a9" totalcountb="2" type="510" usefillcolor="129" linewidth="none">
          <linepath>
           <startpoint startx="253" starty="413"/>
           <endpoint endx="253" endy="329"/>
          </linepath>
         </assocwidget>
         <assocwidget indexa="2" indexb="1" usesdiagramusefillcolor="0" widgetaid="EWlLN0hEVUQx" usesdiagramfillcolor="0" fillcolor="#000000" linecolor="none" totalcounta="3" xmi.id="gQAdYlcmvpcO" widgetbid="gKtuH2IQKxPt" totalcountb="2" type="510" usefillcolor="129" linewidth="none">
          <linepath>
           <startpoint startx="352" starty="413"/>
           <endpoint endx="352" endy="329"/>
          </linepath>
         </assocwidget>
        </associations>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Use Case View" name="Use Case View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Component View" name="Component View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Deployment View" name="Deployment View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Entity Relationship Model" name="Entity Relationship Model">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings viewid="7p50U0YCwupD" uniqueid="UJE5f1mKRvvz" documentation=""/>
  <listview>
   <listitem open="1" type="800" id="Views">
    <listitem open="1" type="836" id="Entity Relationship Model"/>
    <listitem open="1" type="802" id="Use Case View"/>
    <listitem open="1" type="821" id="Component View"/>
    <listitem open="1" type="827" id="Deployment View"/>
    <listitem open="1" type="801" id="Logical View">
     <listitem open="1" type="813" id="g9qHxMBD8GsJ"/>
     <listitem open="1" type="813" id="JTJlRZ1tIHQe"/>
     <listitem open="1" type="813" id="UlIXMSsTi2nY"/>
     <listitem open="0" type="807" id="7p50U0YCwupD" label="Diagramme de classes"/>
     <listitem open="1" type="813" id="gKtuH2IQKxPt"/>
     <listitem open="1" type="813" id="qsjVj8ASo6a9"/>
     <listitem open="1" type="813" id="EWlLN0hEVUQx"/>
     <listitem open="0" type="830" id="Datatypes">
      <listitem open="1" type="829" id="FTrTnwgNWz4w"/>
      <listitem open="1" type="829" id="kyaI3NN3sLZ4"/>
      <listitem open="1" type="829" id="jMxbhWevxTMi"/>
      <listitem open="1" type="829" id="aMgs1vnjtO1w"/>
      <listitem open="1" type="829" id="FcZLjSbHlIhH"/>
      <listitem open="1" type="829" id="NCBGYAAIW5rC"/>
      <listitem open="1" type="829" id="O25sz9oZTSPS"/>
      <listitem open="1" type="829" id="pWuGo5gB4d1U"/>
      <listitem open="1" type="829" id="ZT7WxRELRHDQ"/>
      <listitem open="1" type="829" id="dCL9GCJpgOKb"/>
      <listitem open="1" type="829" id="PzzqSMJnWS25"/>
     </listitem>
    </listitem>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="C++">
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="ZT7WxRELRHDQ" id="ZT7WxRELRHDQ" fileName="unsigned_int" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned_int.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="PzzqSMJnWS25" id="PzzqSMJnWS25" fileName="unsigned_short" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned_short.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="dCL9GCJpgOKb" id="dCL9GCJpgOKb" fileName="unsigned_long" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unsigned_long.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".cpp" parent_class="pWuGo5gB4d1U" id="pWuGo5gB4d1U" fileName="string" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="UlIXMSsTi2nY" id="UlIXMSsTi2nY" fileName="CallStackInfo" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;callstackinfo.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="kzZsgrxM9rEO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" text="public SimpleCallStack ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="g9qHxMBD8GsJ" id="g9qHxMBD8GsJ" fileName="AllocStatProfiler" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;allocstatprofiler.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocWrapper item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocWrapper>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="8SItyz0oGxBQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" text="public AllocWrapper ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocWrapper item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocWrapper>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="fUDhGzRAtdqr" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" text="public SimpleTracer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="JTJlRZ1tIHQe" id="JTJlRZ1tIHQe" fileName="AllocWrapper" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;allocwrapper.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="8SItyz0oGxBQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" text="public AllocStatProfiler ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="gKtuH2IQKxPt" id="gKtuH2IQKxPt" fileName="FunNameDic" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;funnamedic.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="gQAdYlcmvpcO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" text="public SimpleTracer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="qsjVj8ASo6a9" id="qsjVj8ASo6a9" fileName="SimpleCallStack" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;simplecallstack.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CallStackInfo item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CallStackInfo>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="kzZsgrxM9rEO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" text="public CallStackInfo ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CallStackInfo item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CallStackInfo>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="tUUl5KcTy8bz" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" text="public SimpleTracer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_5" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".cpp" parent_class="EWlLN0hEVUQx" id="EWlLN0hEVUQx" fileName="SimpleStackTracer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;simplestacktracer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors"/>
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Methods"/>
       </header>
       <textblocks>
        <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_11" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;FunNameDic item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;FunNameDic>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
        <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
         <header>
          <cppcodedocumentation tag=""/>
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="fUDhGzRAtdqr" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" text="public AllocStatProfiler ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="tUUl5KcTy8bz" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" text="public SimpleCallStack ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_5" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="gQAdYlcmvpcO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" text="public FunNameDic ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_11" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;FunNameDic item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;FunNameDic>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag=""/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="ZT7WxRELRHDQ" id="cppheaderZT7WxRELRHDQ" fileName="unsigned_int" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_INT_H&amp;#010;#define UNSIGNED_INT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="ZT7WxRELRHDQ" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class unsigned_int&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="unsigned_int ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_INT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="PzzqSMJnWS25" id="cppheaderPzzqSMJnWS25" fileName="unsigned_short" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_SHORT_H&amp;#010;#define UNSIGNED_SHORT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="PzzqSMJnWS25" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class unsigned_short&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="unsigned_short ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_SHORT_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="dCL9GCJpgOKb" id="cppheaderdCL9GCJpgOKb" fileName="unsigned_long" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNSIGNED_LONG_H&amp;#010;#define UNSIGNED_LONG_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="dCL9GCJpgOKb" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class unsigned_long&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="unsigned_long ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNSIGNED_LONG_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Datatypes" fileExt=".h" parent_class="pWuGo5gB4d1U" id="cppheaderpWuGo5gB4d1U" fileName="string" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="pWuGo5gB4d1U" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class string&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="string ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="UlIXMSsTi2nY" id="cppheaderUlIXMSsTi2nY" fileName="CallStackInfo" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CALLSTACKINFO_H&amp;#010;#define CALLSTACKINFO_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="UlIXMSsTi2nY" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class CallStackInfo&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" text=" SimpleCallStack ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="CallStackInfo ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CALLSTACKINFO_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="kzZsgrxM9rEO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" text=" SimpleCallStack ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="g9qHxMBD8GsJ" id="cppheaderg9qHxMBD8GsJ" fileName="AllocStatProfiler" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ALLOCSTATPROFILER_H&amp;#010;#define ALLOCSTATPROFILER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;simpletracer.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="g9qHxMBD8GsJ" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class AllocStatProfiler&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" text=" AllocWrapper ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" text=" SimpleTracer ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="AllocStatProfiler ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocWrapper item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocWrapper>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ALLOCSTATPROFILER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="8SItyz0oGxBQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" text=" AllocWrapper ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocWrapper item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocWrapper>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="fUDhGzRAtdqr" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" text=" SimpleTracer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="JTJlRZ1tIHQe" id="cppheaderJTJlRZ1tIHQe" fileName="AllocWrapper" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ALLOCWRAPPER_H&amp;#010;#define ALLOCWRAPPER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;allocstatprofiler.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="JTJlRZ1tIHQe" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class AllocWrapper&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" text=" AllocStatProfiler ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="AllocWrapper ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ALLOCWRAPPER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="8SItyz0oGxBQ" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" text=" AllocStatProfiler ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="8SItyz0oGxBQ" writeOutText="false" indentLevel="1" classfield_id="8SItyz0oGxBQ" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="gKtuH2IQKxPt" id="cppheadergKtuH2IQKxPt" fileName="FunNameDic" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FUNNAMEDIC_H&amp;#010;#define FUNNAMEDIC_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="gKtuH2IQKxPt" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class FunNameDic&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" text=" SimpleTracer ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="FunNameDic ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FUNNAMEDIC_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="gQAdYlcmvpcO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" text=" SimpleTracer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="qsjVj8ASo6a9" id="cppheaderqsjVj8ASo6a9" fileName="SimpleCallStack" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SIMPLECALLSTACK_H&amp;#010;#define SIMPLECALLSTACK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;callstackinfo.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="qsjVj8ASo6a9" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class SimpleCallStack&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" text=" CallStackInfo ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="1" tag="_5" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" text=" SimpleTracer ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="SimpleCallStack ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CallStackInfo item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CallStackInfo>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SIMPLECALLSTACK_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="kzZsgrxM9rEO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="tblock_0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" text=" CallStackInfo ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_0" accessType="0" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_1" accessType="1" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_2" accessType="2" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_3" accessType="3" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;CallStackInfo item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;CallStackInfo>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_4" accessType="4" parent_id="kzZsgrxM9rEO" writeOutText="false" indentLevel="1" classfield_id="kzZsgrxM9rEO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="tUUl5KcTy8bz" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="_5" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" text=" SimpleTracer ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_6" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_7" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_8" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_9" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleTracer item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleTracer>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_10" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument package="Logical View" fileExt=".h" parent_class="EWlLN0hEVUQx" id="cppheaderEWlLN0hEVUQx" fileName="SimpleStackTracer" writeOutCode="true">
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SIMPLESTACKTRACER_H&amp;#010;#define SIMPLESTACKTRACER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;simplecallstack.h&quot;&amp;#010;#include &quot;funnamedic.h&quot;&amp;#010;">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false">
       <header>
        <cppcodedocumentation tag="" text="Namespace"/>
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false">
         <header>
          <cppcodedocumentation tag="" writeOutText="false"/>
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock tag="classDeclarationBlock" parent_id="EWlLN0hEVUQx" canDelete="false">
         <header>
          <cppcodedocumentation tag="" text="Class SimpleStackTracer&amp;#010;"/>
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Public stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks>
              <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" text=" AllocStatProfiler ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" text=" SimpleCallStack ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock role_id="0" tag="_11" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" text=" FunNameDic ;" canDelete="false">
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" indentLevel="1" text="SimpleTracer ( ) { }">
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor"/>
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks>
                  <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_15" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;FunNameDic item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;FunNameDic>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod role_id="0" tag="hblock_tag_16" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1"/>
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Protected stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false">
           <header>
            <cppcodedocumentation tag="" text="Private stuff"/>
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields"/>
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" indentLevel="1" canDelete="false">
             <header>
              <cppcodedocumentation tag="" indentLevel="1"/>
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods"/>
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" indentLevel="1" canDelete="false">
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" indentLevel="1" canDelete="false">
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations"/>
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SIMPLESTACKTRACER_H">
       <header>
        <cppcodedocumentation tag="" writeOutText="false"/>
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag=""/>
     </header>
     <classfields>
      <codeclassfield role_id="0" listClassName="" field_type="4" parent_id="fUDhGzRAtdqr" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="1" tag="tblock_0" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" text=" AllocStatProfiler ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="1" tag="hblock_tag_0" accessType="0" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_1" accessType="1" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_2" accessType="2" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_3" accessType="3" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;AllocStatProfiler item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;AllocStatProfiler>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="1" tag="hblock_tag_4" accessType="4" parent_id="fUDhGzRAtdqr" writeOutText="false" indentLevel="1" classfield_id="fUDhGzRAtdqr" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="tUUl5KcTy8bz" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_5" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" text=" SimpleCallStack ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_6" accessType="0" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_7" accessType="1" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_8" accessType="2" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_9" accessType="3" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;SimpleCallStack item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;SimpleCallStack>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_10" accessType="4" parent_id="tUUl5KcTy8bz" writeOutText="false" indentLevel="1" classfield_id="tUUl5KcTy8bz" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield role_id="1" listClassName="" field_type="4" parent_id="gQAdYlcmvpcO" writeOutMethods="true" initialValue="">
       <header>
        <cppcodedocumentation tag=""/>
       </header>
       <ccfdeclarationcodeblock role_id="0" tag="_11" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" text=" FunNameDic ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1"/>
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod role_id="0" tag="hblock_tag_12" accessType="0" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_13" accessType="1" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text=" = value;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_14" accessType="2" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="%VARNAME%.push_back(value);" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_15" accessType="3" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="int size = %VARNAME%.size();&amp;#010;for ( int i = 0; i &lt; size; ++i) {&amp;#010;&#x9;FunNameDic item = %VARNAME%.at(i);&amp;#010;&#x9;if(item == value) {&amp;#010;&#x9;&#x9;vector&lt;FunNameDic>::iterator it = %VARNAME%.begin() + i;&amp;#010;&#x9;&#x9;%VARNAME%.erase(it);&amp;#010;&#x9;&#x9;return;&amp;#010;&#x9;}&amp;#010; }" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
       <codeaccessormethod role_id="0" tag="hblock_tag_16" accessType="4" parent_id="gQAdYlcmvpcO" writeOutText="false" indentLevel="1" classfield_id="gQAdYlcmvpcO" text="return ;" canDelete="false">
        <header>
         <cppcodedocumentation tag="" indentLevel="1"/>
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
